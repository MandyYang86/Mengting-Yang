/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Salesperson;

import Business.Business;
import Business.Customer;
import Business.Market;
import Business.Order;
import Business.OrderItem;
import Business.Product;
import Business.SalesPerson;
import Business.Supplier;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author butte
 */
public class BookOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    private SalesPerson salesPerson;
    private Customer customer;
    private Market market;
    private Order order;
    double sum = 0;//to calculate total order price

    /**
     * Creates new form BookOrderJPanel
     */
    BookOrderJPanel(JPanel userProcessContainer, Business business, SalesPerson salesPerson, Customer customer, Market market) {
        initComponents();
        this.business = business;
        this.customer = customer;
        this.market = market;
        this.salesPerson = salesPerson;
        this.userProcessContainer = userProcessContainer;
        order = new Order();

        txtSPName.setText(salesPerson.getSalesPersonUserName());
        txtAddress.setText(customer.getCustomerAddress());
        txtContact.setText(customer.getContact());
        txtCustomerName.setText(customer.getCustomerName());

        populateProductTable();
    }

    public void populateProductTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblProductCatalog.getModel();
        dtm.setRowCount(0);
        for (Supplier supplier : business.getBusiness_SupplierDirectory().getSupplierDirectory()) {
            for (Product product : supplier.getSupplier_productCatalog().getProductCatalog()) {
                if (product.getProduct_MarketOffer().getMarketOffer_Market().equals(market)) {
                    Object[] row = new Object[6];
                    row[0] = product;
                    row[1] = product.getProductID();
                    row[2] = product.getProduct_MarketOffer().getFloorPrice();
                    row[3] = product.getProduct_MarketOffer().getCeilingPrice();
                    row[4] = product.getProduct_MarketOffer().getTargrtPrice();
                    row[5] = product.getNumberInStock();
                    dtm.addRow(row);
                }
            }
        }
    }

    public void orderTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblOderItems.getModel();
        dtm.setRowCount(0);

        for (OrderItem orderItem : order.getOrderItemList()) {

            Object[] row = new Object[5];
            row[0] = orderItem;
            row[1] = orderItem.getOrderItem_Product().getProductID();
            row[2] = orderItem.getActualPrice();
            row[3] = orderItem.getActualPrice() * orderItem.getQuantity();
            row[4] = orderItem.getQuantity();
            dtm.addRow(row);
        }
    }
        ArrayList<Integer> targetPriceList=new ArrayList<Integer>() ;
         ArrayList<Integer> actualPriceList=new ArrayList<Integer>() ;
         ArrayList<Integer> compernsationList =new ArrayList<Integer>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCustomerName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSPName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductCatalog = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOderItems = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        btnCancelOrder = new javax.swing.JButton();
        btnSubmitOrder = new javax.swing.JButton();
        btnAddToCart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtActualPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lableAmount = new javax.swing.JLabel();
        labelProfit = new javax.swing.JLabel();

        setEnabled(false);

        txtCustomerName.setEditable(false);
        txtCustomerName.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtCustomerName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCustomerName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        txtCustomerName.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Customer Contact:");

        txtContact.setEditable(false);
        txtContact.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtContact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        txtContact.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Customer Address:");

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        txtAddress.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Salesperson:");

        txtSPName.setEditable(false);
        txtSPName.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtSPName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSPName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        txtSPName.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Book Customer Order");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Customer Name:");

        tblProductCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "Floor Price", "Ceiling Price", "Target Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductCatalog);
        if (tblProductCatalog.getColumnModel().getColumnCount() > 0) {
            tblProductCatalog.getColumnModel().getColumn(0).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(1).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(2).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(3).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(4).setResizable(false);
        }

        tblOderItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "Actual Price", "total amout", "Number"
            }
        ));
        jScrollPane2.setViewportView(tblOderItems);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Order Items:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Total Price:");

        txtTotalPrice.setEditable(false);
        txtTotalPrice.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtTotalPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalPrice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        txtTotalPrice.setEnabled(false);
        txtTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPriceActionPerformed(evt);
            }
        });

        btnCancelOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelOrder.setText("Remove Order Item");
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        btnSubmitOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        btnAddToCart.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddToCart.setText("ADD to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtActualPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActualPriceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Quantity");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Set Actual Price");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("You have the compensation of");

        lableAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lableAmount.setText("Amount");

        labelProfit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelProfit.setText("Profit or Loss");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddToCart, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSPName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtContact)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(68, 68, 68)
                                    .addComponent(btnCancelOrder)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSubmitOrder))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(lableAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(labelProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSPName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnAddToCart)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 75, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelOrder)
                        .addComponent(btnSubmitOrder)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lableAmount)
                    .addComponent(labelProfit))
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProductCatalog.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Product selectedProduct = (Product) tblProductCatalog.getValueAt(selectedRow, 0);
        int quantity = (Integer) quantitySpinner.getValue();
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(null, "quanity cannot be zero or less than that");
            return;
        }

        int salePrice = Integer.parseInt(txtActualPrice.getText());
        //business.getBusiness_MasterOrderCatalog().addOrder();
        OrderItem orderItem = order.addOrderItem();
        orderItem.setActualPrice((int) salePrice);
        orderItem.setOrderItem_Product(selectedProduct);
        // perform this ---  orderItem.setProduct(selectedProduct);

        if (salePrice <= selectedProduct.getProduct_MarketOffer().getFloorPrice()) {
            JOptionPane.showMessageDialog(null, "actual selling price cannot be less than floor price ");
            return;
        }
        if (quantity <= selectedProduct.getNumberInStock()) {
            boolean alreadyPresent = false;
            for (OrderItem oi : order.getOrderItemList()) {
                if (oi.getOrderItem_Product() == selectedProduct) {
                    int oldAvail = selectedProduct.getNumberInStock();
                    int newAvail = oldAvail - quantity;
                    selectedProduct.setNumberInStock(newAvail);
                    oi.setQuantity(quantity + oi.getQuantity());
                    alreadyPresent = true;
                    populateProductTable();
                    orderTable();
                    break;

                }

            }
            if (!alreadyPresent) {
                int oldAvail = selectedProduct.getNumberInStock();
                int newAvail = oldAvail - quantity;
                selectedProduct.setNumberInStock(newAvail);
                order.addOrderItem();
                populateProductTable();
                orderTable();

            }

        } else {
            JOptionPane.showMessageDialog(this, "quanity > availablilty", "warning", JOptionPane.WARNING_MESSAGE);
        }
        int sum = 0;//to calculate total order price
        for (int i = 0; i < tblOderItems.getRowCount(); i++) {
            sum = sum + Integer.parseInt(tblOderItems.getValueAt(i, 3).toString());
        }

        txtTotalPrice.setText(Integer.toString(sum));

        int targetPrice = selectedProduct.getProduct_MarketOffer().getTargrtPrice() * quantity;
        int actualPrice = Integer.parseInt(txtActualPrice.getText())*quantity;
        int compernsation = actualPrice - targetPrice;
        
         targetPriceList.add(targetPrice);
         actualPriceList.add(actualPrice);
         compernsationList.add(compernsation);
         
         int target=0;
         for(int i=0;i<targetPriceList.size();i++){
             target=target+targetPriceList.get(i);
         }
         
         int actual=0;
         for(int i=0;i<actualPriceList.size();i++){
             actual=actual+actualPriceList.get(i);
         }
         
         int compernsationPrice=0;
         for(int i=0;i<compernsationList.size();i++){
             compernsationPrice=compernsationPrice+compernsationList.get(i);
         }
 
            if (target > actual) {
                lableAmount.setText(String.valueOf(target - actual));
                labelProfit.setText("  Loss!");
            }
        
        if (target < actual) {
            lableAmount.setText(String.valueOf(actual - target));
            labelProfit.setText("  Profit!");
        }
        order.setGap(compernsationPrice);

        if (compernsationPrice > 0) {
            salesPerson.getProfitList().add(compernsationPrice);
        }
        if (compernsationPrice < 0) {
            salesPerson.getLossList().add(0 - compernsationPrice);
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtActualPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActualPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActualPriceActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed
        // TODO add your handling code here:
        if (order.getOrderItemList().size() < 0) {
            JOptionPane.showMessageDialog(null, "No Items! ", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            business.getBusiness_MasterOrderCatalog().addOrder(order);
            order.setOrder_customer(customer);
            order = new Order();
            orderTable();
            populateProductTable();
            JOptionPane.showMessageDialog(null, "Submit Successful! ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        //JOptionPane.showMessageDialog(null, "Submit Successful! ","Warning",JOptionPane.WARNING_MESSAGE ); 
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOderItems.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select row from table first to go ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            OrderItem orderItem = (OrderItem) tblOderItems.getValueAt(selectedRow, 0);
            order.removeOrderItem(orderItem);
            int oldAva = orderItem.getOrderItem_Product().getNumberInStock();
            int oldQua = orderItem.getQuantity();
            int newQua = oldAva + oldQua;
            orderItem.getOrderItem_Product().setNumberInStock(newQua);
            orderTable();
            populateProductTable();
        }

    }//GEN-LAST:event_btnCancelOrderActionPerformed

    private void txtTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPriceActionPerformed
    //method to count sum of ordered items


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelProfit;
    private javax.swing.JLabel lableAmount;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JTable tblOderItems;
    private javax.swing.JTable tblProductCatalog;
    private javax.swing.JTextField txtActualPrice;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtSPName;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
