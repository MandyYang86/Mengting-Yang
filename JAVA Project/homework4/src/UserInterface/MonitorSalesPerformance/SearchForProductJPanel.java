/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MonitorSalesPerformance;

import Business.Business;
import Business.Market;
import Business.Order;
import Business.OrderItem;
import Business.Product;
import Business.Supplier;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mengtingyang
 */
public class SearchForProductJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    
    private ArrayList<Product> products_sorted;
    private ArrayList<Product> top3;

    /**
     * Creates new form SearchForProductJPanel
     */
    SearchForProductJPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        
        products_sorted = new ArrayList<Product>();
        top3 = new ArrayList<Product>();

        for (Supplier supplier : business.getBusiness_SupplierDirectory().getSupplierDirectory()) {
            for (Product p : supplier.getSupplier_productCatalog().getProductCatalog()) {
                // for each product in our entire company, do : -
                
                // if product was a good seller
                if (p.getDidSellAboveTarget()) {
                    // simply add if sorted list empty
                    if (products_sorted.isEmpty()) {
                        products_sorted.add(p);
                    } else { // else if sorted list has some element, then add in sorted order
                        for (int i = 0; i < products_sorted.size(); i++) {
                            if (p.getNetSales() > products_sorted.get(i).getNetSales()) {
                                products_sorted.add(i, p);
                                break;
                            }
                            // if smaller in sales then all then simply append at last of list
                            else if( i+1 == products_sorted.size() )
                                products_sorted.add(p);      
                        }
                    }
                }
            }
        }

        
        if(products_sorted.size() >=3){
            for (int i = 0; i < 3; i++) {
                top3.add(products_sorted.get(i));
            }
        }
        else{
            for(int i = 0; i< products_sorted.size() ; i++)
                top3.add(products_sorted.get(i));
        }
        
//        comboMarket.removeAllItems();
//        for(Market market: business.getBusiness_MarketList().getMarketList()){
//            comboMarket.addItem(market);
//        }
    }
//    ArrayList<Product> productList = new ArrayList<Product>();
//    ArrayList<Product> afterDupProductList = new ArrayList<Product>();
//    ArrayList<Integer> productRevenue = new ArrayList<Integer>();
    ArrayList<Integer> productMarketRevenue = new ArrayList<Integer>();
//
//    public void removeD() {
//        for (int i = 0; i < productList.size(); i++) {
//            for (int j = i + 1; j < productList.size(); j++) {
//                if (productList.get(i).equals(productList.get(j))) {
//                    productList.remove(j);
//                    j--;
//                }
//            }
//        }
//    }
//    public void cauculateProductRevenue() {
//        for (Order order : business.getBusiness_MasterOrderCatalog().getMasterOrderCatalog()) {
//            for (OrderItem orderItem : order.getOrderItemList()) {
//                for (Supplier supplier : business.getBusiness_SupplierDirectory().getSupplierDirectory()) {
//                    productRevenue.remove(productRevenue);
//                    for (Product product : supplier.getSupplier_productCatalog().getProductCatalog()) {
//                        if (orderItem.getOrderItem_Product().equals(product)) {
//                            int a = (int) (orderItem.getQuantity() * orderItem.getActualPrice());
//                            productRevenue.add(a);
//                        }
//                    }
//                    int totalPrice = 0;
//                    for (int i = 0; i < productRevenue.size(); i++) {
//                        totalPrice = productRevenue.get(i) + totalPrice;
//                    }
//                    orderItem.getOrderItem_Product().setProductRevenue(totalPrice);
//                }
//            }
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHE = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTop3Products = new javax.swing.JTable();
        btnTOP3ProductsAboveSales = new javax.swing.JButton();
        btnHE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtFM = new javax.swing.JTextField();
        btnFM = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText(" Search For Product");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Product Sales Revenue:");

        txtHE.setEnabled(false);

        tblTop3Products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Number In Stock", "ID", "Total Revenue"
            }
        ));
        jScrollPane1.setViewportView(tblTop3Products);

        btnTOP3ProductsAboveSales.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTOP3ProductsAboveSales.setText("TOP 3 Products ABOVE Market Target Sales");
        btnTOP3ProductsAboveSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTOP3ProductsAboveSalesActionPerformed(evt);
            }
        });

        btnHE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHE.setText("Higher Education Market");
        btnHE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHEActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Product Sales Revenue:");

        txtFM.setEnabled(false);

        btnFM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFM.setText("Finance Market");
        btnFM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(340, 340, 340))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHE, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFM, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnBack))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnHE, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFM, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(btnTOP3ProductsAboveSales)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFM))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnTOP3ProductsAboveSales)
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnTOP3ProductsAboveSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTOP3ProductsAboveSalesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblTop3Products.getModel();
        dtm.setRowCount(0);
        for (Product p : top3){
            Object[] row = new Object[4];
            row[0] = p;
            row[1] = p.getNumberInStock();
            row[2] = p.getProductID();
            row[3] = p.getNetSales();
            dtm.addRow(row);
        }
    }//GEN-LAST:event_btnTOP3ProductsAboveSalesActionPerformed

    private void btnHEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHEActionPerformed
        // TODO add your handling code here:
        
        for (Order order : business.getBusiness_MasterOrderCatalog().getMasterOrderCatalog()) {
            for (OrderItem orderItem : order.getOrderItemList()) {
                if (orderItem.getOrderItem_Product().getProduct_MarketOffer().getMarketOffer_Market().getMarketName().equals("Higher Education")) {
                    int a = (int) (orderItem.getQuantity() * orderItem.getActualPrice());
                    productMarketRevenue.add(a);
                }
                int totalPrice = 0;
                for (int i = 0; i < productMarketRevenue.size(); i++) {
                    totalPrice = productMarketRevenue.get(i) + totalPrice;
                    orderItem.getOrderItem_Product().setProductMarketRevenue(totalPrice);
                }
                txtHE.setText(String.valueOf(totalPrice));
            }
        }
    }//GEN-LAST:event_btnHEActionPerformed

    private void btnFMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFMActionPerformed
        // TODO add your handling code here:
        for (Order order : business.getBusiness_MasterOrderCatalog().getMasterOrderCatalog()) {
            for (OrderItem orderItem : order.getOrderItemList()) {
                if (orderItem.getOrderItem_Product().getProduct_MarketOffer().getMarketOffer_Market().getMarketName().equals("Finance")) {
                    int a = (int) (orderItem.getQuantity() * orderItem.getActualPrice());
                    productMarketRevenue.add(a);
                }
                int totalPrice = 0;
                for (int i = 0; i < productMarketRevenue.size(); i++) {
                    totalPrice = productMarketRevenue.get(i) + totalPrice;
                    orderItem.getOrderItem_Product().setProductMarketRevenue(totalPrice);
                }
                txtFM.setText(String.valueOf((totalPrice)-Integer.parseInt(txtHE.getText())));
            }
        }
    }//GEN-LAST:event_btnFMActionPerformed

//    public void populateTable() {
//        for (Supplier supplier : business.getBusiness_SupplierDirectory().getSupplierDirectory()) {
//            supplier.getSupplier_productCatalog().sortProductRevenue();
//        }
//        // Integer temp[]=productRevenue.toArray(new Integer[productRevenue.size()]);
//        DefaultTableModel dtm = (DefaultTableModel) tblTop3Products.getModel();
//        dtm.setRowCount(0);
//
//        for (Supplier supplier : business.getBusiness_SupplierDirectory().getSupplierDirectory()) {
//            for (Product product : supplier.getSupplier_productCatalog().getProductCatalog()) {
//                if (dtm.getRowCount() < 3) {
//                    Object[] row = new Object[3];
//                    row[0] = product;
//                    row[1] = product.getNumberInStock();
//                    row[2] = product.getProductRevenue();
//                    dtm.addRow(row);
//                }
//            }
//        }
//
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFM;
    private javax.swing.JButton btnHE;
    private javax.swing.JButton btnTOP3ProductsAboveSales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTop3Products;
    private javax.swing.JTextField txtFM;
    private javax.swing.JTextField txtHE;
    // End of variables declaration//GEN-END:variables
}
