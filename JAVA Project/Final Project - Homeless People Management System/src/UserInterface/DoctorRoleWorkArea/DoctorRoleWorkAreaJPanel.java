/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRoleWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Doctor;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdministrativeWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequestPEToLab;
import Chat.Client;
import UserInterface.EnterpriseAdminWorkArea.ManageOrganizationJPanel;
import java.awt.CardLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mengtingyang
 */
public class DoctorRoleWorkAreaJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private UserAccount account;
private Doctor doctor;
private Enterprise enterprise;
private EcoSystem business;
        

    /**
     * Creates new form DoctorRoleWorkAreaJPanel
     */
   

    public DoctorRoleWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Doctor doctor, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.doctor=doctor;
        this.enterprise=enterprise;
        this.business=business;
        populateResultTable();
    }
    
    public void populateResultTable(){
        DefaultTableModel model = (DefaultTableModel)tblDoctor.getModel();
        model.setRowCount(0);
        for(WorkRequest workrequest : doctor.getWorkQueue().getWorkRequestList()){
            if (workrequest instanceof Business.WorkQueue.WorkRequestPEToLab) {
                WorkRequestPEToLab request = (WorkRequestPEToLab) workrequest;
                Object[] row = new Object[9];
                row[0] = request.getHomeless().getName();
                row[1] = request.getHomeless().getID();
                row[2] = request;
                row[3] = request.getHomeless().getExaminationResult().getHeight();       
                row[4] = request.getHomeless().getExaminationResult().getWeight();
                row[5] = request.getHomeless().getExaminationResult().getBloodPressure();       
                row[6] = request.getHomeless().getExaminationResult().getDisease();
                row[7] = request.getHomeless().getExaminationResult().getRemark();
                row[8] = request.getStatus();

                model.addRow(row);
            }
    }
    }
    public void CreateTxt(){
        int selectedRow = tblDoctor.getSelectedRow();
        WorkRequestPEToLab workrequest = (WorkRequestPEToLab) tblDoctor.getValueAt(selectedRow, 2);
        String s = "d:\\"+workrequest.getHomeless().getName()+".txt";
        File f = new File(s) ;
        OutputStream out = null ;
        try {
            out = new FileOutputStream(f) ;
        } 
        catch (FileNotFoundException e){
            e.printStackTrace();
        }// 将字符串转成字节数组
        
        byte b[] = ("Name: "+workrequest.getHomeless().getName()+" ID: "+workrequest.getHomeless().getID()+
                " Gender: "+workrequest.getHomeless().getGender()+" Age: "+workrequest.getHomeless().getAge()+
                " \r\nHeight: "+workrequest.getHomeless().getExaminationResult().getHeight()+
                " Weight: "+workrequest.getHomeless().getExaminationResult().getWeight()+
                " BloodPressure: "+workrequest.getHomeless().getExaminationResult().getBloodPressure()+
                " Disease: "+workrequest.getHomeless().getExaminationResult().getDisease().getName()).getBytes();
        try {
        // 将byte数组写入到文件之中
        out.write(b) ;
        } 
        catch (IOException e1) {
            e1.printStackTrace();
        }
        try{
         out.close() ;
         } 
        catch (IOException e2) {
            e2.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        logoutJButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 227, 227));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ooopic_1510889295.png"))); // NOI18N
        jLabel1.setText("Welcome Doctor!");

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Message", "Height", "Weight", "BloodPressure", "Disease", "Remark", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoctor);
        if (tblDoctor.getColumnModel().getColumnCount() > 0) {
            tblDoctor.getColumnModel().getColumn(2).setResizable(false);
            tblDoctor.getColumnModel().getColumn(3).setResizable(false);
            tblDoctor.getColumnModel().getColumn(4).setResizable(false);
            tblDoctor.getColumnModel().getColumn(5).setResizable(false);
            tblDoctor.getColumnModel().getColumn(6).setResizable(false);
            tblDoctor.getColumnModel().getColumn(7).setResizable(false);
            tblDoctor.getColumnModel().getColumn(8).setResizable(false);
        }

        btnProcess.setBackground(new java.awt.Color(255, 255, 255));
        btnProcess.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnProcess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ooopic_1510889323.png"))); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ooopic_1510889281.png"))); // NOI18N
        jButton1.setText("Create Document");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        logoutJButton1.setBackground(new java.awt.Color(255, 255, 255));
        logoutJButton1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        logoutJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ooopic_1510889298.png"))); // NOI18N
        logoutJButton1.setText("Chat");
        logoutJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jButton1)
                        .addGap(49, 49, 49)
                        .addComponent(btnProcess)
                        .addGap(49, 49, 49)
                        .addComponent(logoutJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcess)
                    .addComponent(logoutJButton1))
                .addContainerGap(133, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblDoctor.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row first!");
            return; 
        }
        
        WorkRequestPEToLab request = (WorkRequestPEToLab) tblDoctor.getValueAt(selectedRow, 2);
        request.setReceiver(account);
        request.setStatus("Diagonosed");
        populateResultTable();

        ProcessExaminationResultJPanel panel = new ProcessExaminationResultJPanel(userProcessContainer, business, enterprise, request, account);
        userProcessContainer.add("ProcessExaminationResultJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CreateTxt();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void logoutJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButton1ActionPerformed
        // TODO add your handling code here:
        new Client();
    }//GEN-LAST:event_logoutJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutJButton1;
    private javax.swing.JTable tblDoctor;
    // End of variables declaration//GEN-END:variables


}
