/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.AirPlane;
import Business.AirPlaneHistory;
import static java.lang.reflect.Array.set;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author mengtingyang
 */
public class ViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    
    private AirPlaneHistory aph;
    
    public ViewPanel(AirPlaneHistory aph) {
        initComponents();
        this.aph=aph;
        
        populateTable();
        
    }
    
    public void populateTable()
    {
    DefaultTableModel dtm=(DefaultTableModel)JTable.getModel(); 
    dtm.setRowCount(0);
    for(AirPlane ap: aph.getAirPlaneHistory())
    { 
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);
    }
          
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNumberAva = new javax.swing.JTextField();
        txtNumberNotAva = new javax.swing.JTextField();
        txtUpdateTime = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnSearchFirst = new javax.swing.JButton();
        btnAva = new javax.swing.JButton();
        btnNotAva = new javax.swing.JButton();
        btnSearchUpdate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnListAllBoeing = new javax.swing.JButton();
        btnListAllMade = new javax.swing.JButton();
        madeinComboBox = new javax.swing.JComboBox<>();
        btnFindSerialNumber = new javax.swing.JButton();
        txtFindSerialNumber = new javax.swing.JTextField();
        btnFindAvaSeats = new javax.swing.JButton();
        txtFindFrom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFindTo = new javax.swing.JTextField();
        btnFindModel = new javax.swing.JButton();
        txtFindModel = new javax.swing.JTextField();
        btnAllManufactures = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnUpdateAva = new javax.swing.JButton();
        btnUpdateExp = new javax.swing.JButton();
        txtEnterSerial = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAirport = new javax.swing.JButton();
        txtAirport = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("View Air Plane Information");

        txtNumberAva.setEnabled(false);
        txtNumberAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberAvaActionPerformed(evt);
            }
        });

        txtNumberNotAva.setEnabled(false);
        txtNumberNotAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberNotAvaActionPerformed(evt);
            }
        });

        txtUpdateTime.setEnabled(false);
        txtUpdateTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateTimeActionPerformed(evt);
            }
        });

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Time to Take OFF", "Whether Available", "Manufacture Year", "Manufactures", "Number of Seats", "Whethere Expire Maintain Certificate", "Catalog Update Time", "Model Number", "Air Port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTable.setColumnSelectionAllowed(true);
        JTable.getTableHeader().setReorderingAllowed(false);
        JTable.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(JTable);
        JTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearchFirst.setText("Search The First Available Air Plane:");
        btnSearchFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchFirstActionPerformed(evt);
            }
        });

        btnAva.setText("Search The Number of Available Air Plane:");
        btnAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvaActionPerformed(evt);
            }
        });

        btnNotAva.setText("Search The Number of NOT Available Air Plane:");
        btnNotAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotAvaActionPerformed(evt);
            }
        });

        btnSearchUpdate.setText("Search Latest Update TIme:");
        btnSearchUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUpdateActionPerformed(evt);
            }
        });

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Time to Take OFF", "Available", "Manufacture Year", "Manufactures", "Number of Seats", "Whethere Expire Maintain Certificate", "Catalog Update Time", "Model Number", "Air Port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchTable.setEnabled(false);
        searchTable.getTableHeader().setReorderingAllowed(false);
        searchTable.setUpdateSelectionOnSort(false);
        jScrollPane3.setViewportView(searchTable);

        btnListAllBoeing.setText("List All Boeing Air Plane:");
        btnListAllBoeing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllBoeingActionPerformed(evt);
            }
        });

        btnListAllMade.setText("Lsit All Air Plane Made in");
        btnListAllMade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllMadeActionPerformed(evt);
            }
        });

        madeinComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));

        btnFindSerialNumber.setText("Find By Serial Number:");
        btnFindSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindSerialNumberActionPerformed(evt);
            }
        });

        txtFindSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindSerialNumberActionPerformed(evt);
            }
        });

        btnFindAvaSeats.setText("Find Available Plane which Seats from");
        btnFindAvaSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindAvaSeatsActionPerformed(evt);
            }
        });

        jLabel2.setText("to");

        btnFindModel.setText("FInd By Model Number");
        btnFindModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindModelActionPerformed(evt);
            }
        });

        txtFindModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindModelActionPerformed(evt);
            }
        });

        btnAllManufactures.setText("List All Manufactures");
        btnAllManufactures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllManufacturesActionPerformed(evt);
            }
        });

        jButton1.setText("List All Expired Airplane:");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnUpdateAva.setText("Update Available Status");
        btnUpdateAva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAvaActionPerformed(evt);
            }
        });

        btnUpdateExp.setText("Update Expire Satus");
        btnUpdateExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateExpActionPerformed(evt);
            }
        });

        txtEnterSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnterSerialActionPerformed(evt);
            }
        });

        jLabel3.setText("Please Enter the Serial Number of the Plane You Want to Update");

        btnAirport.setText("List All Airplane in Airport:");
        btnAirport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAirportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnNotAva)
                                    .addComponent(btnAva, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearchUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(139, 139, 139)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumberNotAva, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                    .addComponent(txtNumberAva)
                                    .addComponent(txtUpdateTime)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(287, 287, 287)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addComponent(txtEnterSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(btnUpdateAva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdateExp)
                                .addGap(30, 30, 30)
                                .addComponent(btnDelete)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1229, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1221, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSearchFirst, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                                    .addComponent(btnListAllBoeing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnListAllMade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(madeinComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFindAvaSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFindFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFindTo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFindSerialNumber)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFindSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFindModel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtFindModel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAllManufactures)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAirport)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(txtNumberAva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtNumberNotAva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAva)
                        .addGap(18, 18, 18)
                        .addComponent(btnNotAva)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchUpdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(txtEnterSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdateAva)
                            .addComponent(btnUpdateExp)
                            .addComponent(btnDelete))
                        .addGap(47, 47, 47)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchFirst)
                    .addComponent(btnFindSerialNumber)
                    .addComponent(txtFindSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAllManufactures))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListAllBoeing)
                    .addComponent(btnFindAvaSeats)
                    .addComponent(txtFindFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFindTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListAllMade)
                    .addComponent(madeinComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindModel)
                    .addComponent(txtFindModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAirport)
                    .addComponent(txtAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumberAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberAvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberAvaActionPerformed

    private void txtNumberNotAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberNotAvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberNotAvaActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         int selectedRow=JTable.getSelectedRow();
         if(selectedRow>=0)
         {
              AirPlane ap=(AirPlane)JTable.getValueAt(selectedRow, 0);
              aph.deleteAirPlane(ap);
              JOptionPane.showMessageDialog(null, "Air Plane has been deleted");
              populateTable();
         }
         else
             JOptionPane.showMessageDialog(null, "Please select any row");
             
                 
    }//GEN-LAST:event_btnDeleteActionPerformed

   
    private void btnSearchFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchFirstActionPerformed
        // TODO add your handling code here:
         DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
         Object col[]=new Object[10];
         dtm.setRowCount(0);
         AirPlane ap=new AirPlane();
         ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
        
         int p=0;
         ArrayList<Double> list = new ArrayList<Double>();
         for(int i=0;i<ar.size();i++){
             ap=ar.get(i);
             if(ap.getWhetherAvailable()=="Yes"){
           
                 list.add(ap.getTimeToTakeOff());
                 
             }
         }
             
             Double temp[]=list.toArray(new Double[list.size()]);
             Arrays.sort(temp);
             //System.out.println(String.valueOf(temp[0]));
             String k=temp[0].toString();
             double m=Double.parseDouble(k);
             System.out.println(m);  
            
             
             for(int i=0;i<ar.size();i++){
             ap=ar.get(i);
                if(ap.getTimeToTakeOff()==m&&ap.getWhetherAvailable()=="Yes"){
     
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
          
             }
             }
        
    }//GEN-LAST:event_btnSearchFirstActionPerformed

    private void btnAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvaActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
           if(ap.getWhetherAvailable()=="Yes"){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           }            
     }
    int k=searchTable.getRowCount();
    System.out.println(k);
    
    txtNumberAva.setText(String.valueOf(k));
   
        
            
        
    }//GEN-LAST:event_btnAvaActionPerformed

    private void btnSearchUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel();
         dtm.setRowCount(0);
         Object col[]=new Object[10];
         
         AirPlane ap=new AirPlane();
         ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
       
        Object temp[]=new Object[ar.size()];
         for(int i=0;i<ar.size();i++){
             ap=ar.get(i);
            
             temp[i]=ap.getUpdateTime();}
             //System.out.println(ap.getUpdateTime());
         
             Arrays.sort(temp);
             //System.out.println(String.valueOf(temp[0]));
             
             String k=temp[0].toString();
             txtUpdateTime.setText(k);
             
             
   
         
         
    }//GEN-LAST:event_btnSearchUpdateActionPerformed

    private void btnNotAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotAvaActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
           if(ap.getWhetherAvailable()=="No"){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           }            
     }
    int k=searchTable.getRowCount();
    System.out.println(k);
    
    txtNumberNotAva.setText(String.valueOf(k));
   
    }//GEN-LAST:event_btnNotAvaActionPerformed

    private void btnListAllBoeingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllBoeingActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
           if(ap.getManufactures()=="Boeing"){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           }            
     }
    
    
    
    }//GEN-LAST:event_btnListAllBoeingActionPerformed

    private void btnListAllMadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllMadeActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String madeinyearComboBox=(String)madeinComboBox.getSelectedItem();
    
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
           if(ap.getManufactureYear()==madeinyearComboBox){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           }            
     }
        
    }//GEN-LAST:event_btnListAllMadeActionPerformed

    private void btnFindSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindSerialNumberActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String inputSerialNumber=txtFindSerialNumber.getText();
    
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
           if(ap.getSerialNumber().equals(inputSerialNumber)){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           } 
                 
     }
        
    }//GEN-LAST:event_btnFindSerialNumberActionPerformed

    private void btnFindAvaSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindAvaSeatsActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String seatsFrom=txtFindFrom.getText();
    String seatsTo=txtFindTo.getText();
    int seatsFromInt=Integer.valueOf(seatsFrom);
    int seatsFromToInt=Integer.valueOf(seatsTo);
    
    
   
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
           if(ap.getWhetherAvailable()=="Yes"){
               if(ap.getNumberofSeats()>seatsFromInt){
                       if(ap.getNumberofSeats()<seatsFromToInt){       
               
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
      }
               }
    
           } 
                 
     }
        
    }//GEN-LAST:event_btnFindAvaSeatsActionPerformed

    private void txtFindSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindSerialNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindSerialNumberActionPerformed

    private void btnFindModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindModelActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
 
    String inputModelNumber=txtFindModel.getText();
    
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      
     if(ap.getModelNumber().equals(inputModelNumber)){
      
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           } 
                 
     }
        
    }//GEN-LAST:event_btnFindModelActionPerformed

    private void txtFindModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindModelActionPerformed

    private void btnAllManufacturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllManufacturesActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    
     for(int i=0;i<ar.size();i++){
    ap=ar.get(i);
    Object col[]=new Object[10];
    col[4]=ap.getManufactures();
    dtm.addRow(col);  
     }
    }//GEN-LAST:event_btnAllManufacturesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    
     for(int i=0;i<ar.size();i++){
      ap=ar.get(i);
           if(ap.getWhetherExp()=="Yes"){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           }
     }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtUpdateTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateTimeActionPerformed

    private void btnUpdateAvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAvaActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String enterSerialNumber=txtEnterSerial.getText();
    Object col[]=new Object[10];
    
    for(int i=0;i<ar.size();i++){
      ap=ar.get(i);
           if(ap.getSerialNumber().equals(enterSerialNumber))
           {
      
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      String ava=ap.getWhetherAvailable();
      if(ava=="Yes"){
      ava="No";
      col[2]=ava;
      dtm.addRow(col);  
      }
      else
      {
      ava="Yes";
      col[2]=ava;      
      dtm.addRow(col);  
      }
           }
   
     }
   
    }//GEN-LAST:event_btnUpdateAvaActionPerformed

    private void btnUpdateExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateExpActionPerformed
        // TODO add your handling code here:
    
      
    
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String enterSerialNumber=txtEnterSerial.getText();
    Object col[]=new Object[10];
    
    for(int i=0;i<ar.size();i++){
      ap=ar.get(i);
           if(ap.getSerialNumber().equals(enterSerialNumber))
           {
      
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      String exp=ap.getWhetherExp();
      if(exp=="Yes"){
      exp="No";
      col[6]=exp;
      dtm.addRow(col);  
      }
      else
      {
      exp="Yes";
      col[6]=exp;      
      dtm.addRow(col);  
      }
           }
   
     }
       
        
        
        
    }//GEN-LAST:event_btnUpdateExpActionPerformed

    private void txtEnterSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnterSerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnterSerialActionPerformed

    private void btnAirportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAirportActionPerformed
        // TODO add your handling code here:
    DefaultTableModel dtm=(DefaultTableModel)searchTable.getModel(); 
    dtm.setRowCount(0);
    
    AirPlane ap=new AirPlane();
    ArrayList<AirPlane> ar = aph.getAirPlaneHistory();
    String inputAirport=txtAirport.getText();
    
    for(int i=0;i<ar.size();i++){
       ap=ar.get(i);
      if(ap.getWhetherAvailable()=="Yes"){
           if(ap.getAirPort().equals(inputAirport)){
      Object col[]=new Object[10];
      col[0]=ap;
      col[1]=ap.getTimeToTakeOff();
      col[2]=ap.getWhetherAvailable();
      col[3]=ap.getManufactureYear();
      col[4]=ap.getManufactures();
      col[5]=ap.getNumberofSeats();
      col[6]=ap.getWhetherExp();
      col[7]=ap.getUpdateTime();
      col[8]=ap.getModelNumber();
      col[9]=ap.getAirPort();
      
      dtm.addRow(col);  
           } 
      }       
     }
        
    }//GEN-LAST:event_btnAirportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton btnAirport;
    private javax.swing.JButton btnAllManufactures;
    private javax.swing.JButton btnAva;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindAvaSeats;
    private javax.swing.JButton btnFindModel;
    private javax.swing.JButton btnFindSerialNumber;
    private javax.swing.JButton btnListAllBoeing;
    private javax.swing.JButton btnListAllMade;
    private javax.swing.JButton btnNotAva;
    private javax.swing.JButton btnSearchFirst;
    private javax.swing.JButton btnSearchUpdate;
    private javax.swing.JButton btnUpdateAva;
    private javax.swing.JButton btnUpdateExp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> madeinComboBox;
    private javax.swing.JTable searchTable;
    private javax.swing.JTextField txtAirport;
    private javax.swing.JTextField txtEnterSerial;
    private javax.swing.JTextField txtFindFrom;
    private javax.swing.JTextField txtFindModel;
    private javax.swing.JTextField txtFindSerialNumber;
    private javax.swing.JTextField txtFindTo;
    private javax.swing.JTextField txtNumberAva;
    private javax.swing.JTextField txtNumberNotAva;
    private javax.swing.JTextField txtUpdateTime;
    // End of variables declaration//GEN-END:variables
}
